// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as $$Worker from "../bindings/Worker.mjs";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";

function make(param) {
  return $$Worker.make("./worker");
}

var Config = {
  make: make
};

var EvalWorker = $$Worker.Make(Config);

function make$1(onChange) {
  return {
          state: /* Idle */0,
          worker: Curry._1(EvalWorker.make, undefined),
          onChange: onChange
        };
}

function getState(m) {
  return m.state;
}

function dispatch(m, $$event) {
  var match = m.state;
  var match$1;
  if (match === 0) {
    switch ($$event.TAG | 0) {
      case /* Evaluate */0 :
          match$1 = [
            /* Evaluating */1,
            (function (param) {
                
              })
          ];
          break;
      case /* Success */1 :
      case /* Fail */2 :
          match$1 = [
            m.state,
            undefined
          ];
          break;
      
    }
  } else {
    match$1 = [
      m.state,
      undefined
    ];
  }
  m.state = match$1[0];
  Curry._1(m.onChange, m);
  Belt_Option.map(match$1[1], (function (thunk) {
          return Curry._1(thunk, undefined);
        }));
  
}

var Machine = {
  make: make$1,
  getState: getState,
  dispatch: dispatch
};

export {
  Config ,
  EvalWorker ,
  Machine ,
  
}
/* EvalWorker Not a pure module */
